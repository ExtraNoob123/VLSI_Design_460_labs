// Copyright (C) 1991-2008 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II"
// VERSION "Version 8.1 Build 163 10/28/2008 SJ Web Edition"

// DATE "02/02/2023 13:40:12"

// 
// Device: Altera EPF10K30ETC144-1 Package TQFP144
// 

// 
// This Verilog file should be used for Custom Verilog HDL only
// 

`timescale 1 ps/ 1 ps

module full_add4 (
	S,
	Cout,
	A,
	B,
	Cin);
output 	[3:0] S;
output 	Cout;
input 	[3:0] A;
input 	[3:0] B;
input 	Cin;

wire gnd = 1'b0;
wire vcc = 1'b1;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("full_add4_v.sdo");
// synopsys translate_on

wire \Cin~dataout ;
wire \stage0|S~combout ;
wire \stage0|Cout~combout ;
wire \stage1|S~combout ;
wire \stage1|Cout~combout ;
wire \stage2|S~combout ;
wire \stage2|Cout~combout ;
wire \stage3|S~combout ;
wire \stage3|Cout~combout ;
wire [3:0] \A~dataout ;
wire [3:0] \B~dataout ;


// atom is at PIN_126
flex10ke_io \A[0]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\A~dataout [0]),
	.padio(A[0]));
// synopsys translate_off
defparam \A[0]~I .feedback_mode = "from_pin";
defparam \A[0]~I .operation_mode = "input";
defparam \A[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_124
flex10ke_io \B[0]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\B~dataout [0]),
	.padio(B[0]));
// synopsys translate_off
defparam \B[0]~I .feedback_mode = "from_pin";
defparam \B[0]~I .operation_mode = "input";
defparam \B[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_54
flex10ke_io \Cin~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\Cin~dataout ),
	.padio(Cin));
// synopsys translate_off
defparam \Cin~I .feedback_mode = "from_pin";
defparam \Cin~I .operation_mode = "input";
defparam \Cin~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC6_D7
flex10ke_lcell \stage0|S (
// Equation(s):
// \stage0|S~combout  = \A~dataout [0] $ \B~dataout [0] $ \Cin~dataout 

	.dataa(vcc),
	.datab(\A~dataout [0]),
	.datac(\B~dataout [0]),
	.datad(\Cin~dataout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\stage0|S~combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \stage0|S .clock_enable_mode = "false";
defparam \stage0|S .lut_mask = "c33c";
defparam \stage0|S .operation_mode = "normal";
defparam \stage0|S .output_mode = "comb_only";
defparam \stage0|S .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_56
flex10ke_io \A[1]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\A~dataout [1]),
	.padio(A[1]));
// synopsys translate_off
defparam \A[1]~I .feedback_mode = "from_pin";
defparam \A[1]~I .operation_mode = "input";
defparam \A[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_125
flex10ke_io \B[1]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\B~dataout [1]),
	.padio(B[1]));
// synopsys translate_off
defparam \B[1]~I .feedback_mode = "from_pin";
defparam \B[1]~I .operation_mode = "input";
defparam \B[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC3_D14
flex10ke_lcell \stage0|Cout (
// Equation(s):
// \stage0|Cout~combout  = \A~dataout [0] & (\B~dataout [0] # \Cin~dataout ) # !\A~dataout [0] & \B~dataout [0] & \Cin~dataout 

	.dataa(vcc),
	.datab(\A~dataout [0]),
	.datac(\B~dataout [0]),
	.datad(\Cin~dataout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\stage0|Cout~combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \stage0|Cout .clock_enable_mode = "false";
defparam \stage0|Cout .lut_mask = "fcc0";
defparam \stage0|Cout .operation_mode = "normal";
defparam \stage0|Cout .output_mode = "comb_only";
defparam \stage0|Cout .packed_mode = "false";
// synopsys translate_on

// atom is at LC8_D14
flex10ke_lcell \stage1|S (
// Equation(s):
// \stage1|S~combout  = \A~dataout [1] $ \B~dataout [1] $ \stage0|Cout~combout 

	.dataa(vcc),
	.datab(\A~dataout [1]),
	.datac(\B~dataout [1]),
	.datad(\stage0|Cout~combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\stage1|S~combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \stage1|S .clock_enable_mode = "false";
defparam \stage1|S .lut_mask = "c33c";
defparam \stage1|S .operation_mode = "normal";
defparam \stage1|S .output_mode = "comb_only";
defparam \stage1|S .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_55
flex10ke_io \A[2]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\A~dataout [2]),
	.padio(A[2]));
// synopsys translate_off
defparam \A[2]~I .feedback_mode = "from_pin";
defparam \A[2]~I .operation_mode = "input";
defparam \A[2]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_20
flex10ke_io \B[2]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\B~dataout [2]),
	.padio(B[2]));
// synopsys translate_off
defparam \B[2]~I .feedback_mode = "from_pin";
defparam \B[2]~I .operation_mode = "input";
defparam \B[2]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC4_D14
flex10ke_lcell \stage1|Cout (
// Equation(s):
// \stage1|Cout~combout  = \A~dataout [1] & (\B~dataout [1] # \stage0|Cout~combout ) # !\A~dataout [1] & \B~dataout [1] & \stage0|Cout~combout 

	.dataa(vcc),
	.datab(\A~dataout [1]),
	.datac(\B~dataout [1]),
	.datad(\stage0|Cout~combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\stage1|Cout~combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \stage1|Cout .clock_enable_mode = "false";
defparam \stage1|Cout .lut_mask = "fcc0";
defparam \stage1|Cout .operation_mode = "normal";
defparam \stage1|Cout .output_mode = "comb_only";
defparam \stage1|Cout .packed_mode = "false";
// synopsys translate_on

// atom is at LC7_D14
flex10ke_lcell \stage2|S (
// Equation(s):
// \stage2|S~combout  = \A~dataout [2] $ \B~dataout [2] $ \stage1|Cout~combout 

	.dataa(vcc),
	.datab(\A~dataout [2]),
	.datac(\B~dataout [2]),
	.datad(\stage1|Cout~combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\stage2|S~combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \stage2|S .clock_enable_mode = "false";
defparam \stage2|S .lut_mask = "c33c";
defparam \stage2|S .operation_mode = "normal";
defparam \stage2|S .output_mode = "comb_only";
defparam \stage2|S .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_22
flex10ke_io \A[3]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\A~dataout [3]),
	.padio(A[3]));
// synopsys translate_off
defparam \A[3]~I .feedback_mode = "from_pin";
defparam \A[3]~I .operation_mode = "input";
defparam \A[3]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_23
flex10ke_io \B[3]~I (
	.datain(gnd),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(\B~dataout [3]),
	.padio(B[3]));
// synopsys translate_off
defparam \B[3]~I .feedback_mode = "from_pin";
defparam \B[3]~I .operation_mode = "input";
defparam \B[3]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at LC5_D14
flex10ke_lcell \stage2|Cout (
// Equation(s):
// \stage2|Cout~combout  = \A~dataout [2] & (\B~dataout [2] # \stage1|Cout~combout ) # !\A~dataout [2] & \B~dataout [2] & \stage1|Cout~combout 

	.dataa(vcc),
	.datab(\A~dataout [2]),
	.datac(\B~dataout [2]),
	.datad(\stage1|Cout~combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\stage2|Cout~combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \stage2|Cout .clock_enable_mode = "false";
defparam \stage2|Cout .lut_mask = "fcc0";
defparam \stage2|Cout .operation_mode = "normal";
defparam \stage2|Cout .output_mode = "comb_only";
defparam \stage2|Cout .packed_mode = "false";
// synopsys translate_on

// atom is at LC1_D14
flex10ke_lcell \stage3|S (
// Equation(s):
// \stage3|S~combout  = \A~dataout [3] $ \B~dataout [3] $ \stage2|Cout~combout 

	.dataa(vcc),
	.datab(\A~dataout [3]),
	.datac(\B~dataout [3]),
	.datad(\stage2|Cout~combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\stage3|S~combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \stage3|S .clock_enable_mode = "false";
defparam \stage3|S .lut_mask = "c33c";
defparam \stage3|S .operation_mode = "normal";
defparam \stage3|S .output_mode = "comb_only";
defparam \stage3|S .packed_mode = "false";
// synopsys translate_on

// atom is at LC2_D14
flex10ke_lcell \stage3|Cout (
// Equation(s):
// \stage3|Cout~combout  = \A~dataout [3] & (\B~dataout [3] # \stage2|Cout~combout ) # !\A~dataout [3] & \B~dataout [3] & \stage2|Cout~combout 

	.dataa(vcc),
	.datab(\A~dataout [3]),
	.datac(\B~dataout [3]),
	.datad(\stage2|Cout~combout ),
	.aclr(gnd),
	.aload(gnd),
	.clk(gnd),
	.cin(gnd),
	.cascin(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\stage3|Cout~combout ),
	.regout(),
	.cout(),
	.cascout());
// synopsys translate_off
defparam \stage3|Cout .clock_enable_mode = "false";
defparam \stage3|Cout .lut_mask = "fcc0";
defparam \stage3|Cout .operation_mode = "normal";
defparam \stage3|Cout .output_mode = "comb_only";
defparam \stage3|Cout .packed_mode = "false";
// synopsys translate_on

// atom is at PIN_89
flex10ke_io \S[0]~I (
	.datain(\stage0|S~combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(S[0]));
// synopsys translate_off
defparam \S[0]~I .feedback_mode = "none";
defparam \S[0]~I .operation_mode = "output";
defparam \S[0]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_90
flex10ke_io \S[1]~I (
	.datain(\stage1|S~combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(S[1]));
// synopsys translate_off
defparam \S[1]~I .feedback_mode = "none";
defparam \S[1]~I .operation_mode = "output";
defparam \S[1]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_88
flex10ke_io \S[2]~I (
	.datain(\stage2|S~combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(S[2]));
// synopsys translate_off
defparam \S[2]~I .feedback_mode = "none";
defparam \S[2]~I .operation_mode = "output";
defparam \S[2]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_92
flex10ke_io \S[3]~I (
	.datain(\stage3|S~combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(S[3]));
// synopsys translate_off
defparam \S[3]~I .feedback_mode = "none";
defparam \S[3]~I .operation_mode = "output";
defparam \S[3]~I .reg_source_mode = "none";
// synopsys translate_on

// atom is at PIN_91
flex10ke_io \Cout~I (
	.datain(\stage3|Cout~combout ),
	.clk(gnd),
	.ena(vcc),
	.aclr(gnd),
	.oe(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.dataout(),
	.padio(Cout));
// synopsys translate_off
defparam \Cout~I .feedback_mode = "none";
defparam \Cout~I .operation_mode = "output";
defparam \Cout~I .reg_source_mode = "none";
// synopsys translate_on

endmodule
